<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.oxygen.shop.dao.mapper.OrderFormMapper" >
  <resultMap id="BaseResultMap" type="com.oxygen.shop.common.po.OrderForm" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="product" property="product" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="merchants" property="merchants" jdbcType="VARCHAR" />
    <result column="merchants_id" property="merchantsId" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="address_id" property="addressId" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="VARCHAR" />
    <result column="quantity" property="quantity" jdbcType="VARCHAR" />
    <result column="order_form" property="orderForm" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="VARCHAR" />
    <result column="Method" property="method" jdbcType="VARCHAR" />
    <result column="income" property="income" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, user_id, product, path, product_id, merchants, merchants_id, address, 
    address_id, price, quantity, order_form, state, date, Method, income
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.oxygen.shop.common.po.OrderFormExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_form
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from order_form
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from order_form
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.oxygen.shop.common.po.OrderFormExample" >
    delete from order_form
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.oxygen.shop.common.po.OrderForm" >
    insert into order_form (id, username, user_id, 
      product, path, product_id, 
      merchants, merchants_id, address, 
      address_id, price, quantity, 
      order_form, state, date, 
      Method, income)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{product,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, #{productId,jdbcType=INTEGER}, 
      #{merchants,jdbcType=VARCHAR}, #{merchantsId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{addressId,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, #{quantity,jdbcType=VARCHAR}, 
      #{orderForm,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{date,jdbcType=VARCHAR}, 
      #{method,jdbcType=VARCHAR}, #{income,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.oxygen.shop.common.po.OrderForm" >
    insert into order_form
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="product != null" >
        product,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="merchants != null" >
        merchants,
      </if>
      <if test="merchantsId != null" >
        merchants_id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="orderForm != null" >
        order_form,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="method != null" >
        Method,
      </if>
      <if test="income != null" >
        income,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="product != null" >
        #{product,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="merchants != null" >
        #{merchants,jdbcType=VARCHAR},
      </if>
      <if test="merchantsId != null" >
        #{merchantsId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null" >
        #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=VARCHAR},
      </if>
      <if test="orderForm != null" >
        #{orderForm,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="income != null" >
        #{income,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.oxygen.shop.common.po.OrderFormExample" resultType="java.lang.Integer" >
    select count(*) from order_form
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update order_form
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.product != null" >
        product = #{record.product,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.merchants != null" >
        merchants = #{record.merchants,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantsId != null" >
        merchants_id = #{record.merchantsId,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=VARCHAR},
      </if>
      <if test="record.orderForm != null" >
        order_form = #{record.orderForm,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.method != null" >
        Method = #{record.method,jdbcType=VARCHAR},
      </if>
      <if test="record.income != null" >
        income = #{record.income,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update order_form
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      product = #{record.product,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=INTEGER},
      merchants = #{record.merchants,jdbcType=VARCHAR},
      merchants_id = #{record.merchantsId,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      address_id = #{record.addressId,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=VARCHAR},
      order_form = #{record.orderForm,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      date = #{record.date,jdbcType=VARCHAR},
      Method = #{record.method,jdbcType=VARCHAR},
      income = #{record.income,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.oxygen.shop.common.po.OrderForm" >
    update order_form
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="product != null" >
        product = #{product,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="merchants != null" >
        merchants = #{merchants,jdbcType=VARCHAR},
      </if>
      <if test="merchantsId != null" >
        merchants_id = #{merchantsId,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="addressId != null" >
        address_id = #{addressId,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=VARCHAR},
      </if>
      <if test="orderForm != null" >
        order_form = #{orderForm,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        Method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.oxygen.shop.common.po.OrderForm" >
    update order_form
    set username = #{username,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      product = #{product,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=INTEGER},
      merchants = #{merchants,jdbcType=VARCHAR},
      merchants_id = #{merchantsId,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      address_id = #{addressId,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=VARCHAR},
      order_form = #{orderForm,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      date = #{date,jdbcType=VARCHAR},
      Method = #{method,jdbcType=VARCHAR},
      income = #{income,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>