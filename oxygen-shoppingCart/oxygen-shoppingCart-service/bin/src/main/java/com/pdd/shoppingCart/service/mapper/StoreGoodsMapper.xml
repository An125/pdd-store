<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pdd.shoppingCart.service.mapper.StoreGoodsMapper" >
  <resultMap id="BaseResultMap" type="com.pdd.shoppingCart.common.po.StoreGoods" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="good_name" property="goodName" jdbcType="VARCHAR" />
    <result column="high_price" property="highPrice" jdbcType="DECIMAL" />
    <result column="low_price" property="lowPrice" jdbcType="DECIMAL" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
    <result column="inventory" property="inventory" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.pdd.shoppingCart.common.po.StoreGoods" extends="BaseResultMap" >
    <result column="good_introduce" property="goodIntroduce" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, good_name, high_price, low_price, pic_url, inventory
  </sql>
  <sql id="Blob_Column_List" >
    good_introduce
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.pdd.shoppingCart.common.po.StoreGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.pdd.shoppingCart.common.po.StoreGoodsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from store_goods
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from store_goods
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.pdd.shoppingCart.common.po.StoreGoodsExample" >
    delete from store_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.pdd.shoppingCart.common.po.StoreGoods" >
    insert into store_goods (id, good_name, high_price, 
      low_price, pic_url, inventory, 
      good_introduce)
    values (#{id,jdbcType=VARCHAR}, #{goodName,jdbcType=VARCHAR}, #{highPrice,jdbcType=DECIMAL}, 
      #{lowPrice,jdbcType=DECIMAL}, #{picUrl,jdbcType=VARCHAR}, #{inventory,jdbcType=INTEGER}, 
      #{goodIntroduce,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.pdd.shoppingCart.common.po.StoreGoods" >
    insert into store_goods
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodName != null" >
        good_name,
      </if>
      <if test="highPrice != null" >
        high_price,
      </if>
      <if test="lowPrice != null" >
        low_price,
      </if>
      <if test="picUrl != null" >
        pic_url,
      </if>
      <if test="inventory != null" >
        inventory,
      </if>
      <if test="goodIntroduce != null" >
        good_introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="goodName != null" >
        #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="highPrice != null" >
        #{highPrice,jdbcType=DECIMAL},
      </if>
      <if test="lowPrice != null" >
        #{lowPrice,jdbcType=DECIMAL},
      </if>
      <if test="picUrl != null" >
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="inventory != null" >
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="goodIntroduce != null" >
        #{goodIntroduce,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.pdd.shoppingCart.common.po.StoreGoodsExample" resultType="java.lang.Integer" >
    select count(*) from store_goods
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update store_goods
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.goodName != null" >
        good_name = #{record.goodName,jdbcType=VARCHAR},
      </if>
      <if test="record.highPrice != null" >
        high_price = #{record.highPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.lowPrice != null" >
        low_price = #{record.lowPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.picUrl != null" >
        pic_url = #{record.picUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.inventory != null" >
        inventory = #{record.inventory,jdbcType=INTEGER},
      </if>
      <if test="record.goodIntroduce != null" >
        good_introduce = #{record.goodIntroduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update store_goods
    set id = #{record.id,jdbcType=VARCHAR},
      good_name = #{record.goodName,jdbcType=VARCHAR},
      high_price = #{record.highPrice,jdbcType=DECIMAL},
      low_price = #{record.lowPrice,jdbcType=DECIMAL},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      inventory = #{record.inventory,jdbcType=INTEGER},
      good_introduce = #{record.goodIntroduce,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update store_goods
    set id = #{record.id,jdbcType=VARCHAR},
      good_name = #{record.goodName,jdbcType=VARCHAR},
      high_price = #{record.highPrice,jdbcType=DECIMAL},
      low_price = #{record.lowPrice,jdbcType=DECIMAL},
      pic_url = #{record.picUrl,jdbcType=VARCHAR},
      inventory = #{record.inventory,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.pdd.shoppingCart.common.po.StoreGoods" >
    update store_goods
    <set >
      <if test="goodName != null" >
        good_name = #{goodName,jdbcType=VARCHAR},
      </if>
      <if test="highPrice != null" >
        high_price = #{highPrice,jdbcType=DECIMAL},
      </if>
      <if test="lowPrice != null" >
        low_price = #{lowPrice,jdbcType=DECIMAL},
      </if>
      <if test="picUrl != null" >
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="inventory != null" >
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="goodIntroduce != null" >
        good_introduce = #{goodIntroduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.pdd.shoppingCart.common.po.StoreGoods" >
    update store_goods
    set good_name = #{goodName,jdbcType=VARCHAR},
      high_price = #{highPrice,jdbcType=DECIMAL},
      low_price = #{lowPrice,jdbcType=DECIMAL},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      inventory = #{inventory,jdbcType=INTEGER},
      good_introduce = #{goodIntroduce,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pdd.shoppingCart.common.po.StoreGoods" >
    update store_goods
    set good_name = #{goodName,jdbcType=VARCHAR},
      high_price = #{highPrice,jdbcType=DECIMAL},
      low_price = #{lowPrice,jdbcType=DECIMAL},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      inventory = #{inventory,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>